name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  BUNDLE_PATH: vendor/bundle
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get the release notes
        id: get_release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          NOTES="$(awk "/## Version $VERSION/{flag=1;next}/## Version/{flag=0}flag" CHANGELOG.md)"
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo ::set-output name=NOTES::"$NOTES"
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build
        run: |
          cd android
          ./gradlew airship-framework-proxy:assembleRelease --stacktrace
          cd -

      - name: Github Release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.get_release_notes.outputs.NOTES }}
          draft: false
          prerelease: false

      - name: Publish to Maven Central
        env:
          SONATYPE_USERNAME: ${{ secrets.MAVEN_USER }}
          SONATYPE_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: >-
          cd android
          ./gradlew
          publishProductionPublicationToSonatypeRepository
          --stacktrace
          --max-workers 1
          closeAndReleaseSonatypeStagingRepository
          cd -
          
  ios:
    runs-on: macOS-12
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-
          
      - name: Install Coreutils
        run: brew install coreutils

      - name: Build SDK
        run: |
          cd ios
          pod install
          xcodebuild -scheme AirshipFrameworkProxy build
          cd -

      - name: Upload zip distribution
        uses: actions/upload-artifact@v1
        with:
          name: airship
          path: ./ios/build/AirshipFrameworkProxy.zip
      
      - name: Publish Pods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: exec pod trunk push AirshipFrameworkProxy.podspec

      - name: Github Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.get_release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
          
      - name: Upload zip distribution
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ios/build/AirshipFrameworkProxy.zip
          asset_name: AirshipFrameworkProxy.zip
          asset_content_type: application/zip
